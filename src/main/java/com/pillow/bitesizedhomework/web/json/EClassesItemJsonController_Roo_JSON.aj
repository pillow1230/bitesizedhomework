// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.pillow.bitesizedhomework.web.json;

import com.pillow.bitesizedhomework.model.EClass;
import com.pillow.bitesizedhomework.service.api.EClassService;
import com.pillow.bitesizedhomework.web.json.EClassesItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect EClassesItemJsonController_Roo_JSON {
    
    declare @type: EClassesItemJsonController: @RestController;
    
    declare @type: EClassesItemJsonController: @RequestMapping(value = "/eclasses/{eClass}", name = "EClassesItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private EClassService EClassesItemJsonController.eClassService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param eClassService
     */
    @Autowired
    public EClassesItemJsonController.new(EClassService eClassService) {
        this.eClassService = eClassService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return EClassService
     */
    public EClassService EClassesItemJsonController.getEClassService() {
        return eClassService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param eClassService
     */
    public void EClassesItemJsonController.setEClassService(EClassService eClassService) {
        this.eClassService = eClassService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return EClass
     */
    @ModelAttribute
    public EClass EClassesItemJsonController.getEClass(@PathVariable("eClass") Long id) {
        EClass eClass = eClassService.findOne(id);
        if (eClass == null) {
            throw new NotFoundException(String.format("EClass with identifier '%s' not found",id));
        }
        return eClass;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param eClass
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> EClassesItemJsonController.show(@ModelAttribute EClass eClass) {
        return ResponseEntity.ok(eClass);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param eClass
     * @return UriComponents
     */
    public static UriComponents EClassesItemJsonController.showURI(EClass eClass) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(EClassesItemJsonController.class).show(eClass))
            .buildAndExpand(eClass.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedEClass
     * @param eClass
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> EClassesItemJsonController.update(@ModelAttribute EClass storedEClass, @Valid @RequestBody EClass eClass, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        eClass.setId(storedEClass.getId());
        getEClassService().save(eClass);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param eClass
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> EClassesItemJsonController.delete(@ModelAttribute EClass eClass) {
        getEClassService().delete(eClass);
        return ResponseEntity.ok().build();
    }
    
}
